---
- name: Wait until the server is up
  gather_facts: false
  hosts: all
  tasks:
  - name: wait until server is up
    wait_for: 
      port: 22
      host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
      delay: 10
      timeout: 60
      search_regex: OpenSSH
    vars:
      ansible_connection: local    

- name: Update system packages & Install docker, docker-compose and nginx
  gather_facts: false
  become: true
  hosts: all
  vars_files:
  - vars.yaml
  tasks:
  - name: Update system packages
    ansible.builtin.yum:
      name: '*'
      state: latest

  - name: Ensuring Docker, Nginx are installed
    ansible.builtin.yum:
      name: docker, nginx
      state: present

  - name: install docker compose
    ansible.builtin.get_url: 
      url: https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-{{lookup('pipe', 'uname -m')}}
      dest: /usr/local/bin/docker-compose
      mode: +x

  - name: ensure docker is running
    systemd:
      name: docker
      state: started

  - name: ensure nginx is running
    systemd:
      name: nginx
      state: started

  - name: add user to docker admin group
    ansible.builtin.user:
      name: "{{ linux_user }}"
      groups: "docker"
      append: true

  - name: Reset ssh connection to allow user changes to affect ansible user
    ansible.builtin.meta:
      reset_connection


- name: Generating self signed SSL certificates 
  gather_facts: false
  become: true
  hosts: all
  tasks:
  - name: Create a folder to store the certificates
    ansible.builtin.file:
      path: /etc/nginx/certs
      state: directory
  
  - name: Generate an OpenSSL private key with a different size (2048 bits)
    community.crypto.openssl_privatekey:
      path: /etc/nginx/certs/nginx-selfsigned.key
      size: 2048

  - name: Create simple self-signed certificate
    community.crypto.x509_certificate:
      path: /etc/nginx/certs/nginx-selfsigned.crt
      privatekey_path: /etc/nginx/certs/nginx-selfsigned.key
      provider: selfsigned


- name: Copy all the files in app folder to ec2 server
  remote_user: "{{ linux_user }}"
  gather_facts: false
  hosts: all
  vars:
    ec2_ip: "{{ ansible_host }}"
  vars_files:
  - vars.yaml
  become: yes
  tasks:
  - name: Ensuring all files are copied
    ansible.builtin.copy:
      src: ../app/
      dest: /home/{{ linux_user }}/app/
  
  - name: copy nginx config file to server
    ansible.builtin.template:
      src: ../templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      mode: '0644'
    notify: restart nginx

  handlers:
  - name: restart nginx
    ansible.builtin.systemd:
      name: nginx
      state: restarted


- name: Ensure all upstreams are running - docker compose
  gather_facts: false
  hosts: all
  become_user: "{{ linux_user }}"
  vars_files:
  - vars.yaml
  tasks:
  - name : Run docker-compose
    ansible.builtin.shell: 
      cmd: docker-compose -f /home/{{ linux_user }}/app/docker-compose.yaml up -d

  